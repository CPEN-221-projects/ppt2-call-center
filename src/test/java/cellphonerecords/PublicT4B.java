package cellphonerecords;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;

import static org.junit.jupiter.api.Assertions.*;

@TestInstance(TestInstance.Lifecycle.PER_CLASS)
public class PublicT4B {

    private CallLogger log;

    private String[] from  = { "6048270905", "2375431266", "7321112345", "6045678901", "6048248432", "2365554444", "6062975430", "7782223333", "7326593244", "6062975430", "6048248432", "7326593244", "6048248432", "2375431266", "7326593244", "2365554444", "6048270905", "6045678901", "5307658901", "6048248432", "2375431266", "6062975430", "6048270905", "6062975430", "6048248432", "7321112345", "9742906784", "2365554444", "6045678901", "2365554444", "6062975430", "7326593244", "5307658901", "2375431266", "9742906784", "5307658901", "6062975430", "6062975430", "7782223333", "5307658901", "6048270905", "2365554444", "2365554444", "2375431266", "6045678901", "6048248432", "6048270905", "6062975430", "2375431266", "7326593244", "2178989899", "7326593244", "2178989899", "7326593244", "2365554444", "6048270905", "2365554444", "5307658901", "6062975430", "7321112345", "7782223333", "7326593244", "9742906784", "2365554444", "7782223333", "6062975430", "9742906784", "5307658901", "7782223333", "2375431266", "6048270905", "2365554444", "6048270905", "6048248432", "5307658901", "7321112345", "6048270905", "6045678901", "2375431266", "7782223333", "7326593244", "7782223333", "2375431266", "2178989899", "6045678901", "7326593244", "2375431266", "6045678901", "7782223333", "2178989899", "6045678901", "6048270905", "7326593244", "7782223333", "9742906784", "2375431266", "6045678901", "2365554444", "7321112345", "7782223333", "6048248432", "7326593244", "7326593244", "7782223333", "7321112345", "7326593244", "7782223333", "6062975430", "6048270905", "2178989899", "5307658901", "2375431266", "2375431266", "6048270905", "2365554444", "6062975430", "6045678901", "6062975430", "7326593244", "5307658901", "6048270905", "2178989899", "7782223333", "7782223333", "2178989899", "5307658901", "5307658901", "9742906784", "6045678901", "9742906784", "7326593244", "6048248432", "7321112345", "7321112345", "7321112345", "2375431266", "9742906784", "5307658901", "6045678901", "7326593244", "6062975430", "7321112345", "2178989899", "2365554444", "2178989899", "6045678901", "6045678901", "5307658901", "6048270905", "7321112345", "7782223333", "2375431266", "7321112345", "2178989899", "6048270905", "2365554444", "7321112345", "2178989899", "7326593244", "6048248432", "6048270905", "7326593244", "7321112345", "6062975430", "9742906784", "2365554444", "5307658901", "6048248432", "9742906784", "6048248432", "9742906784", "2375431266", "7782223333", "2178989899", "9742906784", "6048248432", "6045678901", "9742906784", "2375431266", "2375431266", "6048270905", "6048270905", "9742906784", "6048270905", "9742906784", "6045678901", "7782223333", "6048270905", "6062975430", "2375431266", "6048248432", "6062975430", "5307658901", "6048248432", "9742906784", "7782223333", "7782223333", "2178989899", "2375431266", "2365554444" };

    private String[] to    = { "7326593244", "7326593244", "7326593244", "2365554444", "7321112345", "7321112345", "2178989899", "9742906784", "6062975430", "2178989899", "2365554444", "5307658901", "5307658901", "5307658901", "2178989899", "6045678901", "7321112345", "6048270905", "2178989899", "9742906784", "7326593244", "2375431266", "7321112345", "9742906784", "2375431266", "7782223333", "5307658901", "7321112345", "6062975430", "6048270905", "7321112345", "2375431266", "6062975430", "2178989899", "5307658901", "2178989899", "7321112345", "5307658901", "2375431266", "6048270905", "2178989899", "2375431266", "7782223333", "6045678901", "2365554444", "6045678901", "2375431266", "2178989899", "6048248432", "2365554444", "9742906784", "5307658901", "6048248432", "5307658901", "7321112345", "7326593244", "5307658901", "6045678901", "2365554444", "2178989899", "2178989899", "5307658901", "6045678901", "7321112345", "2375431266", "6048270905", "6048248432", "6062975430", "6062975430", "9742906784", "6048248432", "6048248432", "6062975430", "2178989899", "7326593244", "7782223333", "7326593244", "6048248432", "7321112345", "6062975430", "2178989899", "6045678901", "7326593244", "6045678901", "9742906784", "9742906784", "7782223333", "9742906784", "6048270905", "7321112345", "6048248432", "7326593244", "7321112345", "2375431266", "2365554444", "2365554444", "7326593244", "6048248432", "9742906784", "2178989899", "2178989899", "6045678901", "5307658901", "6062975430", "2375431266", "2375431266", "6048270905", "5307658901", "2365554444", "6045678901", "7321112345", "5307658901", "5307658901", "7321112345", "2375431266", "9742906784", "2365554444", "6048248432", "6048248432", "6062975430", "7782223333", "7326593244", "2178989899", "6045678901", "2375431266", "9742906784", "6048248432", "7782223333", "2178989899", "5307658901", "6048270905", "7326593244", "2365554444", "6048248432", "7782223333", "7782223333", "2375431266", "7782223333", "2178989899", "2365554444", "2178989899", "7782223333", "5307658901", "6062975430", "6048270905", "6062975430", "9742906784", "2178989899", "2178989899", "6062975430", "7321112345", "2178989899", "2178989899", "9742906784", "6045678901", "9742906784", "9742906784", "2375431266", "6048270905", "2375431266", "6048248432", "6048270905", "9742906784", "7782223333", "7326593244", "6048248432", "2365554444", "6062975430", "7326593244", "2178989899", "7321112345", "7782223333", "5307658901", "6062975430", "7782223333", "7321112345", "7321112345", "7321112345", "9742906784", "7782223333", "2375431266", "7326593244", "2375431266", "6048248432", "6048270905", "6062975430", "7321112345", "5307658901", "5307658901", "5307658901", "2365554444", "7782223333", "6045678901", "6048270905", "2375431266", "6062975430", "6048248432", "2375431266", "7782223333", "6048248432" };

    private int[] startTime = { 2699, 4116, 2800, 2074, 6015, 6421, 8965, 2757, 1967, 6921, 3305, 8676, 1602, 5462, 1383, 706, 5712, 3844, 1982, 6747, 3947, 1679, 7412, 120, 3682, 1143, 3409, 4856, 7638, 2238, 3788, 1109, 2128, 6425, 2939, 6129, 811, 4772, 5534, 7909, 386, 2420, 6710, 3269, 366, 6322, 1943, 1289, 8780, 6123, 5856, 78, 2952, 307, 4235, 7036, 3247, 2492, 5777, 1816, 4680, 8226, 7377, 8041, 7705, 50, 1871, 4639, 374, 8338, 15, 3381, 8663, 7084, 7469, 1235, 4805, 2224, 6830, 4267, 2569, 3952, 1429, 2165, 1502, 5904, 7128, 8905, 8913, 11, 1250, 8101, 3090, 6515, 947, 7254, 6615, 7885, 5427, 1692, 4827, 7170, 5802, 4844, 5670, 829, 5180, 8560, 3617, 2693, 707, 2740, 3880, 1505, 5229, 570, 6848, 336, 604, 5075, 599, 4339, 2334, 4136, 4487, 4493, 4248, 8638, 8656, 7006, 2197, 5146, 8357, 3569, 4952, 6152, 7980, 921, 6502, 5377, 3508, 3265, 4442, 4033, 8501, 6073, 1774, 3668, 997, 4, 341, 6595, 3296, 7668, 5380, 4444, 4764, 7444, 6779, 112, 2533, 8604, 5249, 2942, 4695, 3741, 1188, 4464, 5582, 8241, 2422, 536, 6573, 1490, 4895, 4473, 2127, 5036, 412, 3074, 3205, 3536, 3755, 894, 1321, 8246, 2000, 4086, 5219, 6739, 1403, 7044, 1074, 6402, 6110, 6948, 4788, 7481, 5918, 5534 };

    private int[] duration = { 83, 126, 111, 44, 53, 196, 189, 148, 9, 27, 60, 204, 259, 53, 28, 237, 180, 66, 20, 134, 12, 23, 294, 60, 35, 68, 93, 62, 278, 153, 216, 118, 142, 6, 164, 121, 276, 5, 7, 55, 161, 288, 92, 201, 286, 80, 225, 28, 232, 280, 10, 83, 217, 105, 153, 113, 7, 17, 154, 106, 100, 215, 209, 157, 216, 35, 177, 2, 45, 256, 13, 163, 17, 195, 246, 210, 34, 166, 224, 118, 53, 116, 197, 32, 219, 142, 27, 122, 210, 270, 133, 6, 151, 8, 196, 92, 76, 16, 23, 80, 290, 64, 19, 38, 16, 134, 1, 89, 89, 218, 28, 68, 19, 212, 140, 128, 215, 1, 103, 99, 223, 14, 11, 63, 158, 134, 176, 81, 130, 94, 29, 94, 145, 85, 80, 11, 293, 139, 92, 10, 151, 22, 30, 80, 46, 248, 69, 200, 277, 3, 11, 137, 51, 269, 239, 46, 89, 1, 165, 167, 111, 23, 73, 108, 32, 50, 43, 7, 124, 243, 35, 9, 29, 73, 16, 163, 17, 75, 62, 98, 48, 43, 50, 91, 7, 55, 15, 6, 201, 40, 190, 18, 21, 115, 35, 74, 34, 31, 126, 19 };

    @BeforeAll
    public void setup() {
        log = new CallLogger();

        for (int i = 0; i < from.length; i++) {
            log.add(new CallRecord(from[i], to[i], startTime[i], duration[i]));
        }
    }

    @Test
    public void testPeakUsage() {
        assertEquals(18, log.getPeakUsage());
    }

    @Test
    public void testFrequentUser() {
        assertEquals("2375431266", log.getMostFrequentUser());
    }

    @Test
    public void getAvgCallTime() {
        assertEquals(105.82, log.getAvgCallDuration(), 0.0001);
    }

    @Test
    public void getAvgCallTimeIndividual() {
        assertEquals(126.3103, log.getAvgCallDuration(to[10]), 0.0001);
    }

    @Test
    public void testOverlap1() {
        assertTrue(log.isOverlappingCall(new CallRecord(from[0], to[0], 2500, 400)));
    }

    @Test
    public void testOverlap2() {
        assertFalse(log.isOverlappingCall(new CallRecord(from[5], to[5], 8000, 15)));
    }

}